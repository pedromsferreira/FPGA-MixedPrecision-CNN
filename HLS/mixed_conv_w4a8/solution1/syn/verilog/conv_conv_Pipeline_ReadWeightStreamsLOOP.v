// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_conv_Pipeline_ReadWeightStreamsLOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_TVALID,
        sext_ln190,
        totalWeightStreams,
        streamsPerFilter,
        filter_V_address0,
        filter_V_ce0,
        filter_V_we0,
        filter_V_d0,
        filter_V_address1,
        filter_V_ce1,
        filter_V_we1,
        filter_V_d1,
        filter_V_15_address0,
        filter_V_15_ce0,
        filter_V_15_we0,
        filter_V_15_d0,
        filter_V_15_address1,
        filter_V_15_ce1,
        filter_V_15_we1,
        filter_V_15_d1,
        filter_V_14_address0,
        filter_V_14_ce0,
        filter_V_14_we0,
        filter_V_14_d0,
        filter_V_14_address1,
        filter_V_14_ce1,
        filter_V_14_we1,
        filter_V_14_d1,
        filter_V_13_address0,
        filter_V_13_ce0,
        filter_V_13_we0,
        filter_V_13_d0,
        filter_V_13_address1,
        filter_V_13_ce1,
        filter_V_13_we1,
        filter_V_13_d1,
        filter_V_12_address0,
        filter_V_12_ce0,
        filter_V_12_we0,
        filter_V_12_d0,
        filter_V_12_address1,
        filter_V_12_ce1,
        filter_V_12_we1,
        filter_V_12_d1,
        filter_V_11_address0,
        filter_V_11_ce0,
        filter_V_11_we0,
        filter_V_11_d0,
        filter_V_11_address1,
        filter_V_11_ce1,
        filter_V_11_we1,
        filter_V_11_d1,
        filter_V_10_address0,
        filter_V_10_ce0,
        filter_V_10_we0,
        filter_V_10_d0,
        filter_V_10_address1,
        filter_V_10_ce1,
        filter_V_10_we1,
        filter_V_10_d1,
        filter_V_9_address0,
        filter_V_9_ce0,
        filter_V_9_we0,
        filter_V_9_d0,
        filter_V_9_address1,
        filter_V_9_ce1,
        filter_V_9_we1,
        filter_V_9_d1,
        filter_V_8_address0,
        filter_V_8_ce0,
        filter_V_8_we0,
        filter_V_8_d0,
        filter_V_8_address1,
        filter_V_8_ce1,
        filter_V_8_we1,
        filter_V_8_d1,
        filter_V_7_address0,
        filter_V_7_ce0,
        filter_V_7_we0,
        filter_V_7_d0,
        filter_V_7_address1,
        filter_V_7_ce1,
        filter_V_7_we1,
        filter_V_7_d1,
        filter_V_6_address0,
        filter_V_6_ce0,
        filter_V_6_we0,
        filter_V_6_d0,
        filter_V_6_address1,
        filter_V_6_ce1,
        filter_V_6_we1,
        filter_V_6_d1,
        filter_V_5_address0,
        filter_V_5_ce0,
        filter_V_5_we0,
        filter_V_5_d0,
        filter_V_5_address1,
        filter_V_5_ce1,
        filter_V_5_we1,
        filter_V_5_d1,
        filter_V_4_address0,
        filter_V_4_ce0,
        filter_V_4_we0,
        filter_V_4_d0,
        filter_V_4_address1,
        filter_V_4_ce1,
        filter_V_4_we1,
        filter_V_4_d1,
        filter_V_3_address0,
        filter_V_3_ce0,
        filter_V_3_we0,
        filter_V_3_d0,
        filter_V_3_address1,
        filter_V_3_ce1,
        filter_V_3_we1,
        filter_V_3_d1,
        filter_V_2_address0,
        filter_V_2_ce0,
        filter_V_2_we0,
        filter_V_2_d0,
        filter_V_2_address1,
        filter_V_2_ce1,
        filter_V_2_we1,
        filter_V_2_d1,
        filter_V_1_address0,
        filter_V_1_ce0,
        filter_V_1_we0,
        filter_V_1_d0,
        filter_V_1_address1,
        filter_V_1_ce1,
        filter_V_1_we1,
        filter_V_1_d1,
        strm_in_TDATA,
        strm_in_TREADY,
        strm_in_TKEEP,
        strm_in_TSTRB,
        strm_in_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   strm_in_TVALID;
input  [29:0] sext_ln190;
input  [31:0] totalWeightStreams;
input  [31:0] streamsPerFilter;
output  [9:0] filter_V_address0;
output   filter_V_ce0;
output   filter_V_we0;
output  [63:0] filter_V_d0;
output  [9:0] filter_V_address1;
output   filter_V_ce1;
output   filter_V_we1;
output  [63:0] filter_V_d1;
output  [9:0] filter_V_15_address0;
output   filter_V_15_ce0;
output   filter_V_15_we0;
output  [63:0] filter_V_15_d0;
output  [9:0] filter_V_15_address1;
output   filter_V_15_ce1;
output   filter_V_15_we1;
output  [63:0] filter_V_15_d1;
output  [9:0] filter_V_14_address0;
output   filter_V_14_ce0;
output   filter_V_14_we0;
output  [63:0] filter_V_14_d0;
output  [9:0] filter_V_14_address1;
output   filter_V_14_ce1;
output   filter_V_14_we1;
output  [63:0] filter_V_14_d1;
output  [9:0] filter_V_13_address0;
output   filter_V_13_ce0;
output   filter_V_13_we0;
output  [63:0] filter_V_13_d0;
output  [9:0] filter_V_13_address1;
output   filter_V_13_ce1;
output   filter_V_13_we1;
output  [63:0] filter_V_13_d1;
output  [9:0] filter_V_12_address0;
output   filter_V_12_ce0;
output   filter_V_12_we0;
output  [63:0] filter_V_12_d0;
output  [9:0] filter_V_12_address1;
output   filter_V_12_ce1;
output   filter_V_12_we1;
output  [63:0] filter_V_12_d1;
output  [9:0] filter_V_11_address0;
output   filter_V_11_ce0;
output   filter_V_11_we0;
output  [63:0] filter_V_11_d0;
output  [9:0] filter_V_11_address1;
output   filter_V_11_ce1;
output   filter_V_11_we1;
output  [63:0] filter_V_11_d1;
output  [9:0] filter_V_10_address0;
output   filter_V_10_ce0;
output   filter_V_10_we0;
output  [63:0] filter_V_10_d0;
output  [9:0] filter_V_10_address1;
output   filter_V_10_ce1;
output   filter_V_10_we1;
output  [63:0] filter_V_10_d1;
output  [9:0] filter_V_9_address0;
output   filter_V_9_ce0;
output   filter_V_9_we0;
output  [63:0] filter_V_9_d0;
output  [9:0] filter_V_9_address1;
output   filter_V_9_ce1;
output   filter_V_9_we1;
output  [63:0] filter_V_9_d1;
output  [9:0] filter_V_8_address0;
output   filter_V_8_ce0;
output   filter_V_8_we0;
output  [63:0] filter_V_8_d0;
output  [9:0] filter_V_8_address1;
output   filter_V_8_ce1;
output   filter_V_8_we1;
output  [63:0] filter_V_8_d1;
output  [9:0] filter_V_7_address0;
output   filter_V_7_ce0;
output   filter_V_7_we0;
output  [63:0] filter_V_7_d0;
output  [9:0] filter_V_7_address1;
output   filter_V_7_ce1;
output   filter_V_7_we1;
output  [63:0] filter_V_7_d1;
output  [9:0] filter_V_6_address0;
output   filter_V_6_ce0;
output   filter_V_6_we0;
output  [63:0] filter_V_6_d0;
output  [9:0] filter_V_6_address1;
output   filter_V_6_ce1;
output   filter_V_6_we1;
output  [63:0] filter_V_6_d1;
output  [9:0] filter_V_5_address0;
output   filter_V_5_ce0;
output   filter_V_5_we0;
output  [63:0] filter_V_5_d0;
output  [9:0] filter_V_5_address1;
output   filter_V_5_ce1;
output   filter_V_5_we1;
output  [63:0] filter_V_5_d1;
output  [9:0] filter_V_4_address0;
output   filter_V_4_ce0;
output   filter_V_4_we0;
output  [63:0] filter_V_4_d0;
output  [9:0] filter_V_4_address1;
output   filter_V_4_ce1;
output   filter_V_4_we1;
output  [63:0] filter_V_4_d1;
output  [9:0] filter_V_3_address0;
output   filter_V_3_ce0;
output   filter_V_3_we0;
output  [63:0] filter_V_3_d0;
output  [9:0] filter_V_3_address1;
output   filter_V_3_ce1;
output   filter_V_3_we1;
output  [63:0] filter_V_3_d1;
output  [9:0] filter_V_2_address0;
output   filter_V_2_ce0;
output   filter_V_2_we0;
output  [63:0] filter_V_2_d0;
output  [9:0] filter_V_2_address1;
output   filter_V_2_ce1;
output   filter_V_2_we1;
output  [63:0] filter_V_2_d1;
output  [9:0] filter_V_1_address0;
output   filter_V_1_ce0;
output   filter_V_1_we0;
output  [63:0] filter_V_1_d0;
output  [9:0] filter_V_1_address1;
output   filter_V_1_ce1;
output   filter_V_1_we1;
output  [63:0] filter_V_1_d1;
input  [127:0] strm_in_TDATA;
output   strm_in_TREADY;
input  [15:0] strm_in_TKEEP;
input  [15:0] strm_in_TSTRB;
input  [0:0] strm_in_TLAST;

reg ap_idle;
reg filter_V_ce0;
reg filter_V_we0;
reg filter_V_ce1;
reg filter_V_we1;
reg filter_V_15_ce0;
reg filter_V_15_we0;
reg filter_V_15_ce1;
reg filter_V_15_we1;
reg filter_V_14_ce0;
reg filter_V_14_we0;
reg filter_V_14_ce1;
reg filter_V_14_we1;
reg filter_V_13_ce0;
reg filter_V_13_we0;
reg filter_V_13_ce1;
reg filter_V_13_we1;
reg filter_V_12_ce0;
reg filter_V_12_we0;
reg filter_V_12_ce1;
reg filter_V_12_we1;
reg filter_V_11_ce0;
reg filter_V_11_we0;
reg filter_V_11_ce1;
reg filter_V_11_we1;
reg filter_V_10_ce0;
reg filter_V_10_we0;
reg filter_V_10_ce1;
reg filter_V_10_we1;
reg filter_V_9_ce0;
reg filter_V_9_we0;
reg filter_V_9_ce1;
reg filter_V_9_we1;
reg filter_V_8_ce0;
reg filter_V_8_we0;
reg filter_V_8_ce1;
reg filter_V_8_we1;
reg filter_V_7_ce0;
reg filter_V_7_we0;
reg filter_V_7_ce1;
reg filter_V_7_we1;
reg filter_V_6_ce0;
reg filter_V_6_we0;
reg filter_V_6_ce1;
reg filter_V_6_we1;
reg filter_V_5_ce0;
reg filter_V_5_we0;
reg filter_V_5_ce1;
reg filter_V_5_we1;
reg filter_V_4_ce0;
reg filter_V_4_we0;
reg filter_V_4_ce1;
reg filter_V_4_we1;
reg filter_V_3_ce0;
reg filter_V_3_we0;
reg filter_V_3_ce1;
reg filter_V_3_we1;
reg filter_V_2_ce0;
reg filter_V_2_we0;
reg filter_V_2_ce1;
reg filter_V_2_we1;
reg filter_V_1_ce0;
reg filter_V_1_we0;
reg filter_V_1_ce1;
reg filter_V_1_we1;
reg strm_in_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln195_fu_625_p2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    strm_in_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire  signed [31:0] sext_ln190_cast_fu_582_p1;
reg  signed [31:0] sext_ln190_cast_reg_955;
wire   [63:0] zext_ln171_fu_706_p1;
wire   [63:0] zext_ln171_1_fu_736_p1;
wire   [3:0] trunc_ln171_fu_726_p1;
reg   [31:0] perWeightCounter_fu_128;
wire   [31:0] perWeightCounter_2_fu_800_p3;
wire    ap_loop_init;
reg   [31:0] saveAddr_fu_132;
wire   [31:0] addrOffset_5_fu_840_p3;
reg   [31:0] currPE_fu_136;
wire   [31:0] currPE_7_fu_848_p3;
reg   [31:0] addrOffset_fu_140;
wire   [31:0] addrOffset_4_fu_856_p3;
reg   [31:0] streamIter_fu_144;
wire   [31:0] streamIter_5_fu_864_p3;
reg   [31:0] i_fu_148;
wire   [31:0] i_3_fu_630_p2;
wire   [63:0] trunc_ln628_fu_756_p1;
wire   [30:0] tmp_fu_650_p4;
wire   [0:0] icmp_ln160_fu_660_p2;
wire   [31:0] numIters_fu_666_p3;
wire   [9:0] trunc_ln195_fu_642_p1;
wire   [9:0] add_ln171_fu_730_p2;
wire   [31:0] perWeightCounter_1_fu_674_p2;
wire   [0:0] icmp_ln207_fu_794_p2;
wire   [31:0] streamIter_4_fu_788_p2;
wire   [31:0] currPE_5_fu_812_p2;
wire   [0:0] icmp_ln216_fu_818_p2;
wire   [31:0] saveAddr_4_fu_782_p2;
wire   [0:0] icmp_ln212_fu_807_p2;
wire   [31:0] saveAddr_5_fu_824_p3;
wire   [31:0] currPE_6_fu_832_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            addrOffset_fu_140 <= 32'd0;
        end else if (((icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            addrOffset_fu_140 <= addrOffset_4_fu_856_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            currPE_fu_136 <= 32'd0;
        end else if (((icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            currPE_fu_136 <= currPE_7_fu_848_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_148 <= 32'd0;
        end else if (((icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_148 <= i_3_fu_630_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            perWeightCounter_fu_128 <= sext_ln190_cast_fu_582_p1;
        end else if (((icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            perWeightCounter_fu_128 <= perWeightCounter_2_fu_800_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            saveAddr_fu_132 <= 32'd0;
        end else if (((icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            saveAddr_fu_132 <= addrOffset_5_fu_840_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            streamIter_fu_144 <= 32'd0;
        end else if (((icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            streamIter_fu_144 <= streamIter_5_fu_864_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sext_ln190_cast_reg_955 <= sext_ln190_cast_fu_582_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln195_fu_625_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_10_ce0 = 1'b1;
    end else begin
        filter_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_10_ce1 = 1'b1;
    end else begin
        filter_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_10_we0 = 1'b1;
    end else begin
        filter_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_10_we1 = 1'b1;
    end else begin
        filter_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_11_ce0 = 1'b1;
    end else begin
        filter_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_11_ce1 = 1'b1;
    end else begin
        filter_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_11_we0 = 1'b1;
    end else begin
        filter_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_11_we1 = 1'b1;
    end else begin
        filter_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_12_ce0 = 1'b1;
    end else begin
        filter_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_12_ce1 = 1'b1;
    end else begin
        filter_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_12_we0 = 1'b1;
    end else begin
        filter_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_12_we1 = 1'b1;
    end else begin
        filter_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_13_ce0 = 1'b1;
    end else begin
        filter_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_13_ce1 = 1'b1;
    end else begin
        filter_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_13_we0 = 1'b1;
    end else begin
        filter_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_13_we1 = 1'b1;
    end else begin
        filter_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_14_ce0 = 1'b1;
    end else begin
        filter_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_14_ce1 = 1'b1;
    end else begin
        filter_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_14_we0 = 1'b1;
    end else begin
        filter_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_14_we1 = 1'b1;
    end else begin
        filter_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_15_ce0 = 1'b1;
    end else begin
        filter_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_15_ce1 = 1'b1;
    end else begin
        filter_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_15_we0 = 1'b1;
    end else begin
        filter_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_15_we1 = 1'b1;
    end else begin
        filter_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_1_ce0 = 1'b1;
    end else begin
        filter_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_1_ce1 = 1'b1;
    end else begin
        filter_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_1_we0 = 1'b1;
    end else begin
        filter_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_1_we1 = 1'b1;
    end else begin
        filter_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_2_ce0 = 1'b1;
    end else begin
        filter_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_2_ce1 = 1'b1;
    end else begin
        filter_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_2_we0 = 1'b1;
    end else begin
        filter_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_2_we1 = 1'b1;
    end else begin
        filter_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_3_ce0 = 1'b1;
    end else begin
        filter_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_3_ce1 = 1'b1;
    end else begin
        filter_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_3_we0 = 1'b1;
    end else begin
        filter_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_3_we1 = 1'b1;
    end else begin
        filter_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_4_ce0 = 1'b1;
    end else begin
        filter_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_4_ce1 = 1'b1;
    end else begin
        filter_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_4_we0 = 1'b1;
    end else begin
        filter_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_4_we1 = 1'b1;
    end else begin
        filter_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_5_ce0 = 1'b1;
    end else begin
        filter_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_5_ce1 = 1'b1;
    end else begin
        filter_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_5_we0 = 1'b1;
    end else begin
        filter_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_5_we1 = 1'b1;
    end else begin
        filter_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_6_ce0 = 1'b1;
    end else begin
        filter_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_6_ce1 = 1'b1;
    end else begin
        filter_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_6_we0 = 1'b1;
    end else begin
        filter_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_6_we1 = 1'b1;
    end else begin
        filter_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_7_ce0 = 1'b1;
    end else begin
        filter_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_7_ce1 = 1'b1;
    end else begin
        filter_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_7_we0 = 1'b1;
    end else begin
        filter_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_7_we1 = 1'b1;
    end else begin
        filter_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_8_ce0 = 1'b1;
    end else begin
        filter_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_8_ce1 = 1'b1;
    end else begin
        filter_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_8_we0 = 1'b1;
    end else begin
        filter_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_8_we1 = 1'b1;
    end else begin
        filter_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_9_ce0 = 1'b1;
    end else begin
        filter_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_9_ce1 = 1'b1;
    end else begin
        filter_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_9_we0 = 1'b1;
    end else begin
        filter_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_9_we1 = 1'b1;
    end else begin
        filter_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_ce0 = 1'b1;
    end else begin
        filter_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_ce1 = 1'b1;
    end else begin
        filter_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_we0 = 1'b1;
    end else begin
        filter_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (trunc_ln171_fu_726_p1 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_V_we1 = 1'b1;
    end else begin
        filter_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        strm_in_TDATA_blk_n = strm_in_TVALID;
    end else begin
        strm_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln195_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        strm_in_TREADY = 1'b1;
    end else begin
        strm_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln171_fu_730_p2 = (trunc_ln195_fu_642_p1 + 10'd1);

assign addrOffset_4_fu_856_p3 = ((icmp_ln212_fu_807_p2[0:0] == 1'b1) ? saveAddr_5_fu_824_p3 : addrOffset_fu_140);

assign addrOffset_5_fu_840_p3 = ((icmp_ln212_fu_807_p2[0:0] == 1'b1) ? saveAddr_5_fu_824_p3 : saveAddr_4_fu_782_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln195_fu_625_p2 == 1'd0) & (strm_in_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln195_fu_625_p2 == 1'd0) & (strm_in_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln195_fu_625_p2 == 1'd0) & (strm_in_TVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign currPE_5_fu_812_p2 = (currPE_fu_136 + 32'd1);

assign currPE_6_fu_832_p3 = ((icmp_ln216_fu_818_p2[0:0] == 1'b1) ? 32'd0 : currPE_5_fu_812_p2);

assign currPE_7_fu_848_p3 = ((icmp_ln212_fu_807_p2[0:0] == 1'b1) ? currPE_6_fu_832_p3 : currPE_fu_136);

assign filter_V_10_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_10_address1 = zext_ln171_fu_706_p1;

assign filter_V_10_d0 = trunc_ln628_fu_756_p1;

assign filter_V_10_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_11_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_11_address1 = zext_ln171_fu_706_p1;

assign filter_V_11_d0 = trunc_ln628_fu_756_p1;

assign filter_V_11_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_12_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_12_address1 = zext_ln171_fu_706_p1;

assign filter_V_12_d0 = trunc_ln628_fu_756_p1;

assign filter_V_12_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_13_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_13_address1 = zext_ln171_fu_706_p1;

assign filter_V_13_d0 = trunc_ln628_fu_756_p1;

assign filter_V_13_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_14_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_14_address1 = zext_ln171_fu_706_p1;

assign filter_V_14_d0 = trunc_ln628_fu_756_p1;

assign filter_V_14_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_15_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_15_address1 = zext_ln171_fu_706_p1;

assign filter_V_15_d0 = trunc_ln628_fu_756_p1;

assign filter_V_15_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_1_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_1_address1 = zext_ln171_fu_706_p1;

assign filter_V_1_d0 = trunc_ln628_fu_756_p1;

assign filter_V_1_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_2_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_2_address1 = zext_ln171_fu_706_p1;

assign filter_V_2_d0 = trunc_ln628_fu_756_p1;

assign filter_V_2_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_3_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_3_address1 = zext_ln171_fu_706_p1;

assign filter_V_3_d0 = trunc_ln628_fu_756_p1;

assign filter_V_3_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_4_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_4_address1 = zext_ln171_fu_706_p1;

assign filter_V_4_d0 = trunc_ln628_fu_756_p1;

assign filter_V_4_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_5_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_5_address1 = zext_ln171_fu_706_p1;

assign filter_V_5_d0 = trunc_ln628_fu_756_p1;

assign filter_V_5_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_6_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_6_address1 = zext_ln171_fu_706_p1;

assign filter_V_6_d0 = trunc_ln628_fu_756_p1;

assign filter_V_6_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_7_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_7_address1 = zext_ln171_fu_706_p1;

assign filter_V_7_d0 = trunc_ln628_fu_756_p1;

assign filter_V_7_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_8_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_8_address1 = zext_ln171_fu_706_p1;

assign filter_V_8_d0 = trunc_ln628_fu_756_p1;

assign filter_V_8_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_9_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_9_address1 = zext_ln171_fu_706_p1;

assign filter_V_9_d0 = trunc_ln628_fu_756_p1;

assign filter_V_9_d1 = {{strm_in_TDATA[127:64]}};

assign filter_V_address0 = zext_ln171_1_fu_736_p1;

assign filter_V_address1 = zext_ln171_fu_706_p1;

assign filter_V_d0 = trunc_ln628_fu_756_p1;

assign filter_V_d1 = {{strm_in_TDATA[127:64]}};

assign i_3_fu_630_p2 = (i_fu_148 + 32'd1);

assign icmp_ln160_fu_660_p2 = (($signed(tmp_fu_650_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_625_p2 = ((i_fu_148 == totalWeightStreams) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_794_p2 = (($signed(perWeightCounter_1_fu_674_p2) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_807_p2 = ((streamIter_4_fu_788_p2 == streamsPerFilter) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_818_p2 = ((currPE_5_fu_812_p2 == 32'd16) ? 1'b1 : 1'b0);

assign numIters_fu_666_p3 = ((icmp_ln160_fu_660_p2[0:0] == 1'b1) ? perWeightCounter_fu_128 : 32'd2);

assign perWeightCounter_1_fu_674_p2 = (perWeightCounter_fu_128 - numIters_fu_666_p3);

assign perWeightCounter_2_fu_800_p3 = ((icmp_ln207_fu_794_p2[0:0] == 1'b1) ? sext_ln190_cast_reg_955 : perWeightCounter_1_fu_674_p2);

assign saveAddr_4_fu_782_p2 = (numIters_fu_666_p3 + saveAddr_fu_132);

assign saveAddr_5_fu_824_p3 = ((icmp_ln216_fu_818_p2[0:0] == 1'b1) ? saveAddr_4_fu_782_p2 : addrOffset_fu_140);

assign sext_ln190_cast_fu_582_p1 = $signed(sext_ln190);

assign streamIter_4_fu_788_p2 = (streamIter_fu_144 + 32'd1);

assign streamIter_5_fu_864_p3 = ((icmp_ln212_fu_807_p2[0:0] == 1'b1) ? 32'd0 : streamIter_4_fu_788_p2);

assign tmp_fu_650_p4 = {{perWeightCounter_fu_128[31:1]}};

assign trunc_ln171_fu_726_p1 = currPE_fu_136[3:0];

assign trunc_ln195_fu_642_p1 = saveAddr_fu_132[9:0];

assign trunc_ln628_fu_756_p1 = strm_in_TDATA[63:0];

assign zext_ln171_1_fu_736_p1 = add_ln171_fu_730_p2;

assign zext_ln171_fu_706_p1 = saveAddr_fu_132;

endmodule //conv_conv_Pipeline_ReadWeightStreamsLOOP
