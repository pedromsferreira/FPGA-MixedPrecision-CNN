-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_w2_conv_w2_Pipeline_ReadBiasStreamsLOOP_VITIS_LOOP_240_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_TVALID : IN STD_LOGIC;
    zext_ln276 : IN STD_LOGIC_VECTOR (36 downto 0);
    zext_ln239 : IN STD_LOGIC_VECTOR (29 downto 0);
    bias_V_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_15_ce0 : OUT STD_LOGIC;
    bias_V_15_we0 : OUT STD_LOGIC;
    bias_V_15_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_14_ce0 : OUT STD_LOGIC;
    bias_V_14_we0 : OUT STD_LOGIC;
    bias_V_14_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_13_ce0 : OUT STD_LOGIC;
    bias_V_13_we0 : OUT STD_LOGIC;
    bias_V_13_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_12_ce0 : OUT STD_LOGIC;
    bias_V_12_we0 : OUT STD_LOGIC;
    bias_V_12_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_11_ce0 : OUT STD_LOGIC;
    bias_V_11_we0 : OUT STD_LOGIC;
    bias_V_11_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_10_ce0 : OUT STD_LOGIC;
    bias_V_10_we0 : OUT STD_LOGIC;
    bias_V_10_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_9_ce0 : OUT STD_LOGIC;
    bias_V_9_we0 : OUT STD_LOGIC;
    bias_V_9_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_8_ce0 : OUT STD_LOGIC;
    bias_V_8_we0 : OUT STD_LOGIC;
    bias_V_8_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_7_ce0 : OUT STD_LOGIC;
    bias_V_7_we0 : OUT STD_LOGIC;
    bias_V_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_6_ce0 : OUT STD_LOGIC;
    bias_V_6_we0 : OUT STD_LOGIC;
    bias_V_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_5_ce0 : OUT STD_LOGIC;
    bias_V_5_we0 : OUT STD_LOGIC;
    bias_V_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_4_ce0 : OUT STD_LOGIC;
    bias_V_4_we0 : OUT STD_LOGIC;
    bias_V_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_3_ce0 : OUT STD_LOGIC;
    bias_V_3_we0 : OUT STD_LOGIC;
    bias_V_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_2_ce0 : OUT STD_LOGIC;
    bias_V_2_we0 : OUT STD_LOGIC;
    bias_V_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_1_ce0 : OUT STD_LOGIC;
    bias_V_1_we0 : OUT STD_LOGIC;
    bias_V_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bias_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bias_V_ce0 : OUT STD_LOGIC;
    bias_V_we0 : OUT STD_LOGIC;
    bias_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    strm_in_TREADY : OUT STD_LOGIC;
    strm_in_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    strm_in_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    strm_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of conv_w2_conv_w2_Pipeline_ReadBiasStreamsLOOP_VITIS_LOOP_240_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv68_0 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv68_1 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln239_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln232_1_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln243_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op42_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal strm_in_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln276_cast_fu_386_p1 : STD_LOGIC_VECTOR (67 downto 0);
    signal zext_ln276_cast_reg_678 : STD_LOGIC_VECTOR (67 downto 0);
    signal zext_ln239_cast_cast_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln239_cast_cast_reg_683 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln232_1_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln239_fu_471_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln239_reg_696 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln246_fu_494_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln246_reg_719 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_fu_138 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_fu_498_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal i_1_fu_142 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_fu_146 : STD_LOGIC_VECTOR (67 downto 0);
    signal add_ln239_fu_421_p2 : STD_LOGIC_VECTOR (67 downto 0);
    signal tmp_data_V_fu_150 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln358_fu_631_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln239_cast_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln240_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln239_1_fu_447_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal cmp6_i2922_mid1_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp6_i29221305_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln232_fu_439_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1_fu_522_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln247_fu_529_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln628_fu_535_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln628_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln628_fu_557_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln628_1_fu_569_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_547_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln628_fu_563_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln628_fu_575_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln628_2_fu_591_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln628_1_fu_599_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln628_1_fu_583_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln628_fu_605_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln628_1_fu_609_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln628_fu_613_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln628_1_fu_619_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_s_fu_625_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component conv_w2_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component conv_w2_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_1_fu_142 <= ap_const_lv64_0;
                elsif (((icmp_ln239_fu_416_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_1_fu_142 <= select_ln239_fu_471_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_146 <= ap_const_lv68_0;
                elsif (((icmp_ln239_fu_416_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_146 <= add_ln239_fu_421_p2;
                end if;
            end if; 
        end if;
    end process;

    j_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_138 <= ap_const_lv5_0;
                elsif (((icmp_ln239_fu_416_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    j_fu_138 <= j_1_fu_498_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln239_fu_416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln232_1_reg_692 <= select_ln232_1_fu_463_p3;
                select_ln239_reg_696 <= select_ln239_fu_471_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln243_fu_479_p2 = ap_const_lv1_1) and (select_ln232_1_fu_463_p3 = ap_const_lv1_1) and (icmp_ln239_fu_416_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_data_V_fu_150 <= strm_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln232_1_fu_463_p3 = ap_const_lv1_1) and (icmp_ln239_fu_416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln246_reg_719 <= trunc_ln246_fu_494_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln239_cast_cast_reg_683(31 downto 0) <= zext_ln239_cast_cast_fu_394_p1(31 downto 0);
                zext_ln276_cast_reg_678 <= zext_ln276_cast_fu_386_p1;
            end if;
        end if;
    end process;
    zext_ln239_cast_cast_reg_683(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln239_1_fu_447_p2 <= std_logic_vector(unsigned(i_1_fu_142) + unsigned(ap_const_lv64_1));
    add_ln239_fu_421_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_146) + unsigned(ap_const_lv68_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, strm_in_TVALID, ap_predicate_op42_read_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (strm_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, strm_in_TVALID, ap_predicate_op42_read_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (strm_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(strm_in_TVALID, ap_predicate_op42_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op42_read_state2 = ap_const_boolean_1) and (strm_in_TVALID = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln239_fu_416_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln239_fu_416_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_predicate_op42_read_state2_assign_proc : process(icmp_ln239_fu_416_p2, select_ln232_1_fu_463_p3, icmp_ln243_fu_479_p2)
    begin
                ap_predicate_op42_read_state2 <= ((icmp_ln243_fu_479_p2 = ap_const_lv1_1) and (select_ln232_1_fu_463_p3 = ap_const_lv1_1) and (icmp_ln239_fu_416_p2 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_10_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_10_ce0 <= ap_const_logic_1;
        else 
            bias_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_10_d0 <= trunc_ln358_fu_631_p1;

    bias_V_10_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_A) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_10_we0 <= ap_const_logic_1;
        else 
            bias_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_11_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_11_ce0 <= ap_const_logic_1;
        else 
            bias_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_11_d0 <= trunc_ln358_fu_631_p1;

    bias_V_11_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_B) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_11_we0 <= ap_const_logic_1;
        else 
            bias_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_12_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_12_ce0 <= ap_const_logic_1;
        else 
            bias_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_12_d0 <= trunc_ln358_fu_631_p1;

    bias_V_12_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_C) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_12_we0 <= ap_const_logic_1;
        else 
            bias_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_13_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_13_ce0 <= ap_const_logic_1;
        else 
            bias_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_13_d0 <= trunc_ln358_fu_631_p1;

    bias_V_13_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_D) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_13_we0 <= ap_const_logic_1;
        else 
            bias_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_14_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_14_ce0 <= ap_const_logic_1;
        else 
            bias_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_14_d0 <= trunc_ln358_fu_631_p1;

    bias_V_14_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_E) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_14_we0 <= ap_const_logic_1;
        else 
            bias_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_15_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_15_ce0 <= ap_const_logic_1;
        else 
            bias_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_15_d0 <= trunc_ln358_fu_631_p1;

    bias_V_15_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_F) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_15_we0 <= ap_const_logic_1;
        else 
            bias_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_1_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_1_ce0 <= ap_const_logic_1;
        else 
            bias_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_1_d0 <= trunc_ln358_fu_631_p1;

    bias_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_1) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_1_we0 <= ap_const_logic_1;
        else 
            bias_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_2_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_2_ce0 <= ap_const_logic_1;
        else 
            bias_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_2_d0 <= trunc_ln358_fu_631_p1;

    bias_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_2) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_2_we0 <= ap_const_logic_1;
        else 
            bias_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_3_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_3_ce0 <= ap_const_logic_1;
        else 
            bias_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_3_d0 <= trunc_ln358_fu_631_p1;

    bias_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_3) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_3_we0 <= ap_const_logic_1;
        else 
            bias_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_4_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_4_ce0 <= ap_const_logic_1;
        else 
            bias_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_4_d0 <= trunc_ln358_fu_631_p1;

    bias_V_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_4) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_4_we0 <= ap_const_logic_1;
        else 
            bias_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_5_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_5_ce0 <= ap_const_logic_1;
        else 
            bias_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_5_d0 <= trunc_ln358_fu_631_p1;

    bias_V_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_5) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_5_we0 <= ap_const_logic_1;
        else 
            bias_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_6_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_6_ce0 <= ap_const_logic_1;
        else 
            bias_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_6_d0 <= trunc_ln358_fu_631_p1;

    bias_V_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_6) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_6_we0 <= ap_const_logic_1;
        else 
            bias_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_7_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_7_ce0 <= ap_const_logic_1;
        else 
            bias_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_7_d0 <= trunc_ln358_fu_631_p1;

    bias_V_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_7) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_7_we0 <= ap_const_logic_1;
        else 
            bias_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_8_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_8_ce0 <= ap_const_logic_1;
        else 
            bias_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_8_d0 <= trunc_ln358_fu_631_p1;

    bias_V_8_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_8) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_8_we0 <= ap_const_logic_1;
        else 
            bias_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_9_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_9_ce0 <= ap_const_logic_1;
        else 
            bias_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_9_d0 <= trunc_ln358_fu_631_p1;

    bias_V_9_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_9) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_9_we0 <= ap_const_logic_1;
        else 
            bias_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_address0 <= select_ln239_reg_696(5 - 1 downto 0);

    bias_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            bias_V_ce0 <= ap_const_logic_1;
        else 
            bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bias_V_d0 <= trunc_ln358_fu_631_p1;

    bias_V_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln232_1_reg_692, trunc_ln246_reg_719)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln246_reg_719 = ap_const_lv4_0) and (select_ln232_1_reg_692 = ap_const_lv1_1))) then 
            bias_V_we0 <= ap_const_logic_1;
        else 
            bias_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cmp6_i29221305_fu_458_p2 <= "1" when (unsigned(i_1_fu_142) < unsigned(zext_ln239_cast_cast_reg_683)) else "0";
    cmp6_i2922_mid1_fu_453_p2 <= "1" when (unsigned(add_ln239_1_fu_447_p2) < unsigned(zext_ln239_cast_cast_reg_683)) else "0";
    icmp_ln239_fu_416_p2 <= "1" when (indvar_flatten_fu_146 = zext_ln276_cast_reg_678) else "0";
    icmp_ln240_fu_433_p2 <= "1" when (j_fu_138 = ap_const_lv5_10) else "0";
    icmp_ln243_fu_479_p2 <= "1" when (select_ln232_fu_439_p3 = ap_const_lv5_0) else "0";
    icmp_ln628_fu_541_p2 <= "1" when (unsigned(sub_ln247_fu_529_p2) > unsigned(xor_ln628_fu_535_p2)) else "0";
    j_1_fu_498_p2 <= std_logic_vector(unsigned(select_ln232_fu_439_p3) + unsigned(ap_const_lv5_1));
    lshr_ln628_1_fu_619_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_1),to_integer(unsigned('0' & zext_ln628_1_fu_609_p1(31-1 downto 0)))));
    lshr_ln628_fu_613_p2 <= std_logic_vector(shift_right(unsigned(select_ln628_1_fu_583_p3),to_integer(unsigned('0' & zext_ln628_fu_605_p1(31-1 downto 0)))));
    or_ln628_fu_563_p2 <= (shl_ln1_fu_522_p3 or ap_const_lv7_7);
    p_Result_s_fu_625_p2 <= (lshr_ln628_fu_613_p2 and lshr_ln628_1_fu_619_p2);
    select_ln232_1_fu_463_p3 <= 
        cmp6_i2922_mid1_fu_453_p2 when (icmp_ln240_fu_433_p2(0) = '1') else 
        cmp6_i29221305_fu_458_p2;
    select_ln232_fu_439_p3 <= 
        ap_const_lv5_0 when (icmp_ln240_fu_433_p2(0) = '1') else 
        j_fu_138;
    select_ln239_fu_471_p3 <= 
        add_ln239_1_fu_447_p2 when (icmp_ln240_fu_433_p2(0) = '1') else 
        i_1_fu_142;
    select_ln628_1_fu_583_p3 <= 
        tmp_fu_547_p4 when (icmp_ln628_fu_541_p2(0) = '1') else 
        tmp_data_V_fu_150;
    select_ln628_2_fu_591_p3 <= 
        or_ln628_fu_563_p2 when (icmp_ln628_fu_541_p2(0) = '1') else 
        sub_ln247_fu_529_p2;
    select_ln628_fu_575_p3 <= 
        sub_ln628_fu_557_p2 when (icmp_ln628_fu_541_p2(0) = '1') else 
        sub_ln628_1_fu_569_p2;
    shl_ln1_fu_522_p3 <= (trunc_ln246_reg_719 & ap_const_lv3_0);

    strm_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, strm_in_TVALID, ap_predicate_op42_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op42_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strm_in_TDATA_blk_n <= strm_in_TVALID;
        else 
            strm_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op42_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op42_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            strm_in_TREADY <= ap_const_logic_1;
        else 
            strm_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln247_fu_529_p2 <= std_logic_vector(signed(ap_const_lv7_78) - signed(shl_ln1_fu_522_p3));
    sub_ln628_1_fu_569_p2 <= std_logic_vector(unsigned(xor_ln628_fu_535_p2) - unsigned(sub_ln247_fu_529_p2));
    sub_ln628_fu_557_p2 <= std_logic_vector(unsigned(sub_ln247_fu_529_p2) - unsigned(xor_ln628_fu_535_p2));
    
    tmp_fu_547_p4_proc : process(tmp_data_V_fu_150)
    variable vlo_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_fu_547_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_7F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := tmp_data_V_fu_150;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_7F(7-1 downto 0)));
            for tmp_fu_547_p4_i in 0 to 128-1 loop
                v0_cpy(tmp_fu_547_p4_i) := tmp_data_V_fu_150(128-1-tmp_fu_547_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(128-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_fu_547_p4 <= resvalue(128-1 downto 0);
    end process;

    trunc_ln246_fu_494_p1 <= select_ln232_fu_439_p3(4 - 1 downto 0);
    trunc_ln358_fu_631_p1 <= p_Result_s_fu_625_p2(8 - 1 downto 0);
    xor_ln628_1_fu_599_p2 <= (select_ln628_fu_575_p3 xor ap_const_lv7_7F);
    xor_ln628_fu_535_p2 <= (shl_ln1_fu_522_p3 xor ap_const_lv7_7F);
    zext_ln239_cast_cast_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln239_cast_fu_390_p1),64));
        zext_ln239_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln239),32));

        zext_ln276_cast_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln276),68));

    zext_ln628_1_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln628_1_fu_599_p2),128));
    zext_ln628_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln628_2_fu_591_p3),128));
end behav;
